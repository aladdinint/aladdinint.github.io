{"version":3,"sources":["webpack:///./src/pages/search.js"],"names":["ItemCard","image","name","price","description","isTabletOrMobile","style","width","className","Body","Title","Subtitle","BakeryPage","useMediaQuery","query","React","useState","show","setShow","handleClose","searchq","useLocation","search","substring","indexOf","frows","frompy","filter","item","Name","toUpperCase","includes","reduce","rows","key","index","push","length","title","display","height","background","fontFamily","textAlign","color","map","items","product","Value","onHide","Header","closeButton","src","cardImg","Footer","variant","onClick"],"mappings":"4FAAA,6KAoBMA,EAAW,SAAC,GAAD,EAAEC,MAAF,IAASC,EAAT,EAASA,KAAmBC,GAA5B,EAAeC,YAAf,EAA4BD,OAAOE,EAAnC,EAAmCA,iBAAnC,OACb,6BACI,kBAAC,IAAD,CAAMC,MAAO,CAAEC,MAAO,SAAWC,UAAYH,EAAoB,UAAW,IAI5E,kBAAC,IAAKI,KAAN,KACI,kBAAC,IAAKC,MAAN,KAAaR,GAEb,kBAAC,IAAKS,SAAN,SACMR,OAgGHS,UAxFI,WACf,IAAMP,EAAmBQ,wBAAc,CAAEC,MAAO,wBAD3B,EAEGC,IAAMC,UAAS,GAAhCC,EAFc,KAERC,EAFQ,KAGfC,EAAc,kBAAMD,GAAQ,IAE9BE,EAAUC,wBAAcC,OAAOC,UAAUF,wBAAcC,OAAOE,QAAQ,KAAK,GAKzEC,EAHOC,EAAOC,QAAO,SAASC,GAClC,OAAOA,EAAKC,KAAKC,cAAcC,SAASX,EAAQU,kBAE/BE,QAAO,SAAUC,EAAMC,EAAKC,GAC7C,OAAQA,EAAQ,GAAK,EAAIF,EAAKG,KAAK,CAACF,IAChCD,EAAKA,EAAKI,OAAO,GAAGD,KAAKF,KAASD,IACrC,IAEJ,OACA,kBAAC,IAAD,KAGK,kBAAC,IAAD,CAAKK,MAAO,WACZ,6BACA,yBAAKhC,MAAO,CACdiC,QAAS,eACTC,OAAQ,QACRjC,MAAO,OACPkC,WAAY,WAEZ,wBAAInC,MAAO,CACToC,WAAY,GACZC,UAAW,SACXC,MAAO,QACLxB,EAASA,EAAQU,cAAgB,iBACrC,6BACA,6BAaA,6BACA,kBAAC,IAAD,CAAUtB,UAAU,YAGpB,6BAEAiB,EAAMoB,KAAI,SAACC,GAAD,OACR,6BACE,6BACA,kBAAC,IAAD,CAAUtC,UAAU,WACtBsC,EAAMD,KAAI,SAACE,GAAD,OACR,kBAAC/C,EAAD,CACAE,KAAM6C,EAAQlB,KACdzB,YAAa2C,EAAQlB,KACrB1B,MAAO4C,EAAQC,MACf3C,iBAAkBA,YAMtB,kBAAC,IAAD,CAAOY,KAAMA,EAAMgC,OAAQ9B,GACzB,kBAAC,IAAM+B,OAAP,CAAcC,aAAW,GACvB,kBAAC,IAAMzC,MAAP,eAEF,kBAAC,IAAMD,KAAP,KACI,yBAAK2C,IAAKC,MACV,oDACA,6BAHJ,2JAMA,kBAAC,IAAMC,OAAP,KACE,kBAAC,IAAD,CAAQC,QAAQ,YAAYC,QAASrC,GAArC","file":"component---src-pages-search-js-18a988e63a02975cfa2d.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport SEO from \"../components/seo\"\r\nimport Layout from \"../components/layout\"\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport cardImg from '../images/download.jpg'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport {Redirect} from \"@reach/router\"\r\nimport frompy from \"../json/items.json\"\r\nimport { useLocation } from \"@reach/router\"\r\n\r\n\r\nconst ItemCard = ({image, name, description, price, isTabletOrMobile}) => (\r\n    <div>\r\n        <Card style={{ width: '14rem' }} className={ isTabletOrMobile ?  \"mx-auto\": \"\"}> \r\n        {//TODO: images \r\n         //<Card.Img variant=\"top\" src={image} height='140' width='180'/>\r\n        }\r\n        <Card.Body>\r\n            <Card.Title>{name}</Card.Title>\r\n            {/*<Card.Subtitle>{description}</Card.Subtitle>*/}\r\n            <Card.Subtitle>\r\n                ${price}\r\n            </Card.Subtitle>\r\n            {/*<Button variant=\"primary\" onClick={handleShow}>Read more</Button>*/}\r\n        </Card.Body>\r\n    </Card>\r\n    </div>\r\n);\r\n\r\nconst BakeryPage = () => {\r\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\r\n    const [show, setShow] = React.useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    let searchq = useLocation().search.substring(useLocation().search.indexOf(\"=\")+1);//params.get('dept')\r\n    //iteration stuff\r\n    const rows = frompy.filter(function(item){\r\n      return item.Name.toUpperCase().includes(searchq.toUpperCase());         \r\n  })\r\n    const frows = rows.reduce(function (rows, key, index) { \r\n      return (index % 3 == 0 ? rows.push([key]) \r\n        : rows[rows.length-1].push(key)) && rows;\r\n    }, []);\r\n    \r\n   return(\r\n   <Layout>\r\n               {//<Redirect noThrow from=\"/404\"to={\"/comingsoon\"}/>\r\n}\r\n        <SEO title={\"Search\"} />\r\n        <br/>\r\n        <div style={{\r\n      display: 'inline-block',\r\n      height: '60 px',\r\n      width: '100%',\r\n      background: 'yellow',\r\n    }}>\r\n      <h2 style={{\r\n        fontFamily: '',\r\n        textAlign: 'center',\r\n        color: 'red'\r\n      }}>{searchq? searchq.toUpperCase() : \"ALL PRODUCTS\"}</h2></div>\r\n      <br/> \r\n      <br/>\r\n        {\r\n          /*TODO: THIS\r\n          <Row className=\"text-center\">\r\n          <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1} className=\"mx-auto\">\r\n            <ToggleButton variant=\"secondary\" value={1}>1</ToggleButton>\r\n            <ToggleButton variant=\"secondary\" value={2}>2</ToggleButton>\r\n            <ToggleButton variant=\"secondary\" value={3}>3</ToggleButton>\r\n            <ToggleButton variant=\"secondary\" value={4}>4</ToggleButton>\r\n  </ToggleButtonGroup>      \r\n      </Row>\r\n      */\r\n}\r\n      <br/>\r\n      <CardDeck className='mx-auto'>\r\n    {/*4 CARDS GO HERE*/}\r\n      </CardDeck>\r\n      <br/>\r\n      {\r\n      frows.map((items)=> (\r\n        <div>\r\n          <br/>\r\n          <CardDeck className='mx-auto'>\r\n       {items.map((product) => (\r\n          <ItemCard\r\n          name={product.Name}\r\n          description={product.Name}\r\n          price={product.Value}\r\n          isTabletOrMobile={isTabletOrMobile}\r\n          />))}\r\n          </CardDeck>\r\n          </div>\r\n      ))}\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Steak</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <img src={cardImg}/>\r\n            <strong>Meat and Poultry</strong>\r\n            <br/>\r\n            Yes I really love steak. The flavor that it provides is unparalleled and it is a great source of protien. Not to mention it is a very comfortable food. \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n   </Layout>\r\n\r\n      );\r\n};\r\n\r\nexport default BakeryPage\r\n"],"sourceRoot":""}